// The class for the display of the game
// Santiago Rios Smith
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package town.flow.of.time.people;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;

/** 
 *
 * @author daves
 */
public class Display extends javax.swing.JFrame {

    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
        TextBox.setBackground(new Color(255,255,255,150));
        NewMusicBox.setBackground(new Color(190,190,190,255));
        Background.setVisible(true);
        mainMenu();
        FirstExit.setVisible(false);
        SecondExit.setVisible(false);
        Cancel.setVisible(false);
        ExclamationImage.setVisible(false);
        TextBox.setVisible(false);
        back.setVisible(false);
        Ushio.setVisible(false);
        UshioName.setVisible(false);
        Fantasy.setVisible(false);
        FantasyName.setVisible(false);
        TFOTP.setVisible(false);
        TFOTPName.setVisible(false);
        NFATFOTH.setVisible(false);
        NFATFOTHName.setVisible(false);
        NagisaMusic.setVisible(false);
        NagisaMusicName.setVisible(false);
        TheDaysLeisure.setVisible(false);
        TheDaysLeisureName.setVisible(false);
        Summertime.setVisible(false);
        SummertimeName.setVisible(false);
        RoaringTides.setVisible(false);
        RoaringTidesName.setVisible(false);
        Snowfield.setVisible(false);
        SnowfieldName.setVisible(false);
        IfIRealizedInTime.setVisible(false);
        IfIRealizedInTimeName.setVisible(false);
        NextText.setVisible(false);
        NewMusicBox.setVisible(false);
        NewMusicText.setVisible(false);
        NewMusicText.setForeground(Color.BLUE);
        BigText.setVisible(false);
        Choice1.setVisible(false);
        Choice2.setVisible(false);
        One.setVisible(false);
        Two.setVisible(false);
        Three.setVisible(false);
        Four.setVisible(false);
        Five.setVisible(false);
        Six.setVisible(false);
        Seven.setVisible(false);
        Eight.setVisible(false);
        Nine.setVisible(false);
        Zero.setVisible(false);
        EquasionBox.setVisible(false);
        DerivativeBox.setVisible(false);
        OpeningBracket.setVisible(false);
        ClosingBracket.setVisible(false);
        Exponent.setVisible(false);
        Multiply.setVisible(false);
        Divide.setVisible(false);
        Add.setVisible(false);
        Subtract.setVisible(false);
        Differentiate.setVisible(false);
        X.setVisible(false);
        BottomOfFraction.setVisible(false);
        Delete.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Delete = new javax.swing.JButton();
        BottomOfFraction = new javax.swing.JButton();
        Differentiate = new javax.swing.JButton();
        X = new javax.swing.JButton();
        Subtract = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Divide = new javax.swing.JButton();
        Multiply = new javax.swing.JButton();
        Exponent = new javax.swing.JButton();
        ClosingBracket = new javax.swing.JButton();
        OpeningBracket = new javax.swing.JButton();
        Seven = new javax.swing.JButton();
        Nine = new javax.swing.JButton();
        Six = new javax.swing.JButton();
        Four = new javax.swing.JButton();
        Three = new javax.swing.JButton();
        One = new javax.swing.JButton();
        Two = new javax.swing.JButton();
        Five = new javax.swing.JButton();
        Eight = new javax.swing.JButton();
        Zero = new javax.swing.JButton();
        DerivativeCalculator = new javax.swing.JButton();
        BigText = new javax.swing.JLabel();
        Choice1 = new javax.swing.JButton();
        Choice2 = new javax.swing.JButton();
        NextText = new javax.swing.JButton();
        NewMusicText = new javax.swing.JLabel();
        NewMusicBox = new javax.swing.JPanel();
        FirstExit = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        SecondExit = new javax.swing.JButton();
        Text = new javax.swing.JLabel();
        EquasionText = new javax.swing.JLabel();
        ReadMeText = new javax.swing.JLabel();
        DerivativeText = new javax.swing.JLabel();
        EquasionBox = new javax.swing.JPanel();
        TextBox = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        Nagisa = new javax.swing.JLabel();
        ExclamationImage = new javax.swing.JLabel();
        NagisaMusicName = new javax.swing.JLabel();
        NagisaMusic = new javax.swing.JButton();
        NFATFOTHName = new javax.swing.JLabel();
        NFATFOTH = new javax.swing.JButton();
        Fantasy = new javax.swing.JButton();
        FantasyName = new javax.swing.JLabel();
        TFOTP = new javax.swing.JButton();
        TFOTPName = new javax.swing.JLabel();
        DerivativeBox = new javax.swing.JPanel();
        Ushio = new javax.swing.JButton();
        UshioName = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        ReadMe = new javax.swing.JButton();
        MusicMode = new javax.swing.JButton();
        PlayButton = new javax.swing.JButton();
        TheDaysLeisureName = new javax.swing.JLabel();
        TheDaysLeisure = new javax.swing.JButton();
        SummertimeName = new javax.swing.JLabel();
        Summertime = new javax.swing.JButton();
        RoaringTidesName = new javax.swing.JLabel();
        RoaringTides = new javax.swing.JButton();
        SnowfieldName = new javax.swing.JLabel();
        Snowfield = new javax.swing.JButton();
        IfIRealizedInTimeName = new javax.swing.JLabel();
        IfIRealizedInTime = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Delete.setBackground(new java.awt.Color(0, 0, 0));
        Delete.setForeground(new java.awt.Color(246, 246, 246));
        Delete.setText("Delete");
        Delete.setFocusPainted(false);
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 785, 83, -1));

        BottomOfFraction.setBackground(new java.awt.Color(235, 235, 235));
        BottomOfFraction.setText("Bottom of fraction");
        BottomOfFraction.setFocusPainted(false);
        BottomOfFraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottomOfFractionActionPerformed(evt);
            }
        });
        getContentPane().add(BottomOfFraction, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 910, -1, -1));

        Differentiate.setBackground(new java.awt.Color(255, 102, 102));
        Differentiate.setForeground(new java.awt.Color(0, 0, 0));
        Differentiate.setText("Differentiate");
        Differentiate.setFocusPainted(false);
        Differentiate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DifferentiateActionPerformed(evt);
            }
        });
        getContentPane().add(Differentiate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 910, -1, -1));

        X.setBackground(new java.awt.Color(235, 235, 235));
        X.setFont(new java.awt.Font("SWScrpc", 0, 18)); // NOI18N
        X.setText("X");
        X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XActionPerformed(evt);
            }
        });
        getContentPane().add(X, new org.netbeans.lib.awtextra.AbsoluteConstraints(712, 900, 40, 30));

        Subtract.setBackground(new java.awt.Color(235, 235, 235));
        Subtract.setText("-");
        Subtract.setFocusPainted(false);
        Subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtractActionPerformed(evt);
            }
        });
        getContentPane().add(Subtract, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 910, 83, -1));

        Add.setBackground(new java.awt.Color(235, 235, 235));
        Add.setText("+");
        Add.setFocusPainted(false);
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 885, 83, -1));

        Divide.setBackground(new java.awt.Color(235, 235, 235));
        Divide.setText("/");
        Divide.setFocusPainted(false);
        Divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivideActionPerformed(evt);
            }
        });
        getContentPane().add(Divide, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 860, 83, -1));

        Multiply.setBackground(new java.awt.Color(235, 235, 235));
        Multiply.setText("*");
        Multiply.setFocusPainted(false);
        Multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplyActionPerformed(evt);
            }
        });
        getContentPane().add(Multiply, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 835, 83, -1));

        Exponent.setBackground(new java.awt.Color(235, 235, 235));
        Exponent.setText("Exponent");
        Exponent.setFocusPainted(false);
        Exponent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExponentActionPerformed(evt);
            }
        });
        getContentPane().add(Exponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 810, 83, -1));

        ClosingBracket.setBackground(new java.awt.Color(235, 235, 235));
        ClosingBracket.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ClosingBracket.setText(")");
        ClosingBracket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClosingBracketActionPerformed(evt);
            }
        });
        getContentPane().add(ClosingBracket, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 900, 40, 30));

        OpeningBracket.setBackground(new java.awt.Color(235, 235, 235));
        OpeningBracket.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        OpeningBracket.setText("(");
        OpeningBracket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpeningBracketActionPerformed(evt);
            }
        });
        getContentPane().add(OpeningBracket, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 900, 40, 30));

        Seven.setBackground(new java.awt.Color(235, 235, 235));
        Seven.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Seven.setText("7");
        Seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SevenActionPerformed(evt);
            }
        });
        getContentPane().add(Seven, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 870, 40, 30));

        Nine.setBackground(new java.awt.Color(235, 235, 235));
        Nine.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Nine.setText("9");
        Nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NineActionPerformed(evt);
            }
        });
        getContentPane().add(Nine, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 870, 40, 30));

        Six.setBackground(new java.awt.Color(235, 235, 235));
        Six.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Six.setText("6");
        Six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SixActionPerformed(evt);
            }
        });
        getContentPane().add(Six, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 840, 40, 30));

        Four.setBackground(new java.awt.Color(235, 235, 235));
        Four.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Four.setText("4");
        Four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FourActionPerformed(evt);
            }
        });
        getContentPane().add(Four, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 840, 40, 30));

        Three.setBackground(new java.awt.Color(235, 235, 235));
        Three.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Three.setText("3");
        Three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThreeActionPerformed(evt);
            }
        });
        getContentPane().add(Three, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 810, 40, 30));

        One.setBackground(new java.awt.Color(235, 235, 235));
        One.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        One.setText("1");
        One.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OneActionPerformed(evt);
            }
        });
        getContentPane().add(One, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 810, 40, 30));

        Two.setBackground(new java.awt.Color(235, 235, 235));
        Two.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Two.setText("2");
        Two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TwoActionPerformed(evt);
            }
        });
        getContentPane().add(Two, new org.netbeans.lib.awtextra.AbsoluteConstraints(624, 810, 40, 30));

        Five.setBackground(new java.awt.Color(235, 235, 235));
        Five.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Five.setText("5");
        Five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiveActionPerformed(evt);
            }
        });
        getContentPane().add(Five, new org.netbeans.lib.awtextra.AbsoluteConstraints(624, 840, 40, 30));

        Eight.setBackground(new java.awt.Color(235, 235, 235));
        Eight.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Eight.setText("8");
        Eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EightActionPerformed(evt);
            }
        });
        getContentPane().add(Eight, new org.netbeans.lib.awtextra.AbsoluteConstraints(624, 870, 40, 30));

        Zero.setBackground(new java.awt.Color(235, 235, 235));
        Zero.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Zero.setText("0");
        Zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroActionPerformed(evt);
            }
        });
        getContentPane().add(Zero, new org.netbeans.lib.awtextra.AbsoluteConstraints(624, 900, 40, 30));

        DerivativeCalculator.setBackground(new java.awt.Color(235, 235, 235));
        DerivativeCalculator.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        DerivativeCalculator.setText("Derivative Calculator");
        DerivativeCalculator.setFocusPainted(false);
        DerivativeCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DerivativeCalculatorActionPerformed(evt);
            }
        });
        getContentPane().add(DerivativeCalculator, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 690, 140, 60));

        BigText.setFont(new java.awt.Font("Segoe UI", 0, 130)); // NOI18N
        BigText.setText("That long long hill.");
        getContentPane().add(BigText, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 1200, 410));

        Choice1.setBackground(new java.awt.Color(235, 235, 235));
        Choice1.setText("Go behind the school");
        Choice1.setFocusPainted(false);
        Choice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Choice1ActionPerformed(evt);
            }
        });
        getContentPane().add(Choice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 760, 1210, -1));

        Choice2.setBackground(new java.awt.Color(235, 235, 235));
        Choice2.setText("Go home");
        Choice2.setFocusPainted(false);
        Choice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Choice2ActionPerformed(evt);
            }
        });
        getContentPane().add(Choice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 790, 1210, -1));

        NextText.setBackground(new java.awt.Color(150, 150, 150));
        NextText.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        NextText.setText(">");
        NextText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextTextActionPerformed(evt);
            }
        });
        getContentPane().add(NextText, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 750, 40, 30));

        NewMusicText.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        NewMusicText.setText("test");
        getContentPane().add(NewMusicText, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 40, 530, -1));
        NewMusicText.getAccessibleContext().setAccessibleName("");

        getContentPane().add(NewMusicBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 10, 530, 140));

        FirstExit.setBackground(new java.awt.Color(150, 150, 150));
        FirstExit.setFocusPainted(false);
        FirstExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstExitActionPerformed(evt);
            }
        });
        getContentPane().add(FirstExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1226, 921, 20, 20));

        Cancel.setBackground(new java.awt.Color(235, 235, 235));
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        getContentPane().add(Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 400, 230, -1));

        SecondExit.setBackground(new java.awt.Color(235, 235, 235));
        SecondExit.setText("Return to title page");
        SecondExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondExitActionPerformed(evt);
            }
        });
        getContentPane().add(SecondExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 370, 230, -1));

        Text.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        getContentPane().add(Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 770, 1200, -1));

        EquasionText.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        getContentPane().add(EquasionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1280, 270));

        ReadMeText.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        getContentPane().add(ReadMeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1280, 270));

        DerivativeText.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        getContentPane().add(DerivativeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 1280, 110));

        EquasionBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        getContentPane().add(EquasionBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1280, 270));
        getContentPane().add(TextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 750, 1210, 190));

        back.setBackground(new java.awt.Color(235, 235, 235));
        back.setText("←back");
        back.setFocusPainted(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));
        getContentPane().add(Nagisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 1040, 960));

        ExclamationImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/town/flow/of/time/people/Images/ExclamationPoint.png"))); // NOI18N
        getContentPane().add(ExclamationImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 410, -1, -1));

        NagisaMusicName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        NagisaMusicName.setText("???");
        getContentPane().add(NagisaMusicName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 570, -1, -1));

        NagisaMusic.setBackground(new java.awt.Color(235, 235, 235));
        NagisaMusic.setText("Play");
        NagisaMusic.setFocusPainted(false);
        NagisaMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NagisaMusicActionPerformed(evt);
            }
        });
        getContentPane().add(NagisaMusic, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 600, 110, 40));

        NFATFOTHName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        NFATFOTHName.setText("???");
        getContentPane().add(NFATFOTHName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, -1, -1));

        NFATFOTH.setBackground(new java.awt.Color(235, 235, 235));
        NFATFOTH.setText("Play");
        NFATFOTH.setFocusPainted(false);
        NFATFOTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NFATFOTHActionPerformed(evt);
            }
        });
        getContentPane().add(NFATFOTH, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 110, 40));

        Fantasy.setBackground(new java.awt.Color(235, 235, 235));
        Fantasy.setText("Play");
        Fantasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FantasyActionPerformed(evt);
            }
        });
        getContentPane().add(Fantasy, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 110, 40));

        FantasyName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        FantasyName.setText("???");
        getContentPane().add(FantasyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        TFOTP.setBackground(new java.awt.Color(235, 235, 235));
        TFOTP.setText("Play");
        TFOTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFOTPActionPerformed(evt);
            }
        });
        getContentPane().add(TFOTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 110, 40));

        TFOTPName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        TFOTPName.setText("???");
        getContentPane().add(TFOTPName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        DerivativeBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        getContentPane().add(DerivativeBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 1280, 110));

        Ushio.setBackground(new java.awt.Color(235, 235, 235));
        Ushio.setText("Play");
        Ushio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UshioActionPerformed(evt);
            }
        });
        getContentPane().add(Ushio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 110, 40));

        UshioName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        UshioName.setText("Ushio");
        getContentPane().add(UshioName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        Title.setFont(new java.awt.Font("SWRomnd", 0, 48)); // NOI18N
        Title.setText("Town, Flow of Time, People");
        getContentPane().add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 790, 120));

        ReadMe.setBackground(new java.awt.Color(235, 235, 235));
        ReadMe.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ReadMe.setText("Read Me");
        ReadMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReadMeActionPerformed(evt);
            }
        });
        getContentPane().add(ReadMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 560, 140, 60));

        MusicMode.setBackground(new java.awt.Color(235, 235, 235));
        MusicMode.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        MusicMode.setText("Music Mode");
        MusicMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MusicModeActionPerformed(evt);
            }
        });
        getContentPane().add(MusicMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 430, 140, 60));

        PlayButton.setBackground(new java.awt.Color(235, 235, 235));
        PlayButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        PlayButton.setText("Play");
        PlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PlayButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 300, 140, 60));

        TheDaysLeisureName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        TheDaysLeisureName.setText("???");
        getContentPane().add(TheDaysLeisureName, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 170, -1, -1));

        TheDaysLeisure.setBackground(new java.awt.Color(235, 235, 235));
        TheDaysLeisure.setText("Play");
        TheDaysLeisure.setFocusPainted(false);
        TheDaysLeisure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TheDaysLeisureActionPerformed(evt);
            }
        });
        getContentPane().add(TheDaysLeisure, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 110, 40));

        SummertimeName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        SummertimeName.setText("???");
        getContentPane().add(SummertimeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, -1, -1));

        Summertime.setBackground(new java.awt.Color(235, 235, 235));
        Summertime.setText("Play");
        Summertime.setFocusPainted(false);
        Summertime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SummertimeActionPerformed(evt);
            }
        });
        getContentPane().add(Summertime, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 300, 110, 40));

        RoaringTidesName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        RoaringTidesName.setText("???");
        getContentPane().add(RoaringTidesName, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, -1, -1));

        RoaringTides.setBackground(new java.awt.Color(235, 235, 235));
        RoaringTides.setText("Play");
        RoaringTides.setFocusPainted(false);
        RoaringTides.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoaringTidesActionPerformed(evt);
            }
        });
        getContentPane().add(RoaringTides, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 400, 110, 40));

        SnowfieldName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        SnowfieldName.setText("???");
        getContentPane().add(SnowfieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 470, -1, -1));

        Snowfield.setBackground(new java.awt.Color(235, 235, 235));
        Snowfield.setText("Play");
        Snowfield.setFocusPainted(false);
        Snowfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SnowfieldActionPerformed(evt);
            }
        });
        getContentPane().add(Snowfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 500, 110, 40));

        IfIRealizedInTimeName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        IfIRealizedInTimeName.setText("???");
        getContentPane().add(IfIRealizedInTimeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 570, -1, -1));

        IfIRealizedInTime.setBackground(new java.awt.Color(235, 235, 235));
        IfIRealizedInTime.setText("Play");
        IfIRealizedInTime.setFocusPainted(false);
        IfIRealizedInTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IfIRealizedInTimeActionPerformed(evt);
            }
        });
        getContentPane().add(IfIRealizedInTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 600, 110, 40));

        Background.setBackground(new java.awt.Color(0, 0, 0));
        Background.setForeground(new java.awt.Color(0, 0, 0));
        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/town/flow/of/time/people/Images/MainMenu.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayButtonActionPerformed
        ReadMe.setVisible(false);
        PlayButton.setVisible(false);
        MusicMode.setVisible(false);
        ExclamationImage.setVisible(false);
        Title.setVisible(false);
        DerivativeCalculator.setVisible(false);
        Text.setVisible(true);
        TextBox.setVisible(true);
        FirstExit.setVisible(true);
        NextText.setVisible(true);
        Nagisa.setVisible(true);
        PlayButton.setText("continue");
        music.stopMusic();
        // 3 is the beginning of the game
        if(player.getLine() == 3){
            player.setCurrentIcon(illusionaryWorldSetSceneGreySky,null);
            player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
            music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
            Background.setIcon(illusionaryWorldSetSceneGreySky);
        }
        else{
            Background.setIcon(player.getCurrentIconBackground());
            Nagisa.setIcon(player.getCurrentIconNagisa());
            music.stopMusic();
            player.playCurrentMusic(music);
        }
        try{
        String line = Files.readAllLines(Paths.get("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Script.txt")).get(player.getLine());
        performDelayedTextUpdate(line,Text); 
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_PlayButtonActionPerformed

    private void ReadMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReadMeActionPerformed
        EquasionBox.setVisible(true);
        back.setVisible(true);
        DerivativeCalculator.setVisible(false);
        MusicMode.setVisible(false);
        PlayButton.setVisible(false);
        ReadMe.setVisible(false);
        ReadMeText.setText("  In this story you have the point of view of the main character Tomoya and the point of view of the robot. To move on to the next set of text when playing press the button in the top right of the text box. To exit to the main menu press the button in the bottom right of the text box.");
    }//GEN-LAST:event_ReadMeActionPerformed

    private void MusicModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MusicModeActionPerformed
        PlayButton.setVisible(false);
        MusicMode.setVisible(false);
        ReadMe.setVisible(false);
        DerivativeCalculator.setVisible(false);
        Title.setVisible(false);
        back.setVisible(true);
        Ushio.setVisible(true);
        UshioName.setVisible(true);
        FantasyName.setVisible(true);
        TFOTPName.setVisible(true);
        NFATFOTHName.setVisible(true);
        NagisaMusicName.setVisible(true);
        TheDaysLeisureName.setVisible(true);
        SummertimeName.setVisible(true);
        RoaringTidesName.setVisible(true);
        SnowfieldName.setVisible(true);
        IfIRealizedInTimeName.setVisible(true);
        player.setMusicPending(false);
        ExclamationImage.setVisible(false);
        Fantasy.setVisible(player.getIndex(0));
        TFOTP.setVisible(player.getIndex(1));
        NFATFOTH.setVisible(player.getIndex(2));
        NagisaMusic.setVisible(player.getIndex(3));
        TheDaysLeisure.setVisible(player.getIndex(4));
        Summertime.setVisible(player.getIndex(5));
        RoaringTides.setVisible(player.getIndex(6));
        Snowfield.setVisible(player.getIndex(7));
        IfIRealizedInTime.setVisible(player.getIndex(8));
        // if the player has unlocked the song set the text to the song
        if(player.getIndex(0) == true){
            FantasyName.setText("Fantasy II"); 
        }
        if(player.getIndex(1) == true){
            TFOTPName.setText("Town, Flow of Time, People");    
        }
        if(player.getIndex(2) == true){
            NFATFOTHName.setText("Nagisa ~ Farewell At the Foot of a Hill");
        }
        if(player.getIndex(3) == true){
            NagisaMusicName.setText("Nagisa");
        }
        if(player.getIndex(4) == true){
            TheDaysLeisureName.setText("The Days' Leisure");
        }
        if(player.getIndex(5) == true){
            SummertimeName.setText("Summertime");
        }
        if(player.getIndex(6) == true){
            RoaringTidesName.setText("Roaring Tides");
        }
        if(player.getIndex(7) == true){
            SnowfieldName.setText("Snowfield");
        }
        if(player.getIndex(8) == true){
            IfIRealizedInTimeName.setText("If I Realized In Time");
        }
    }//GEN-LAST:event_MusicModeActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Ushio.setVisible(false);
        UshioName.setVisible(false);
        Fantasy.setVisible(false);
        FantasyName.setVisible(false);
        TFOTP.setVisible(false);
        TFOTPName.setVisible(false);
        back.setVisible(false);
        NFATFOTH.setVisible(false);
        NFATFOTHName.setVisible(false);
        NagisaMusic.setVisible(false);
        NagisaMusicName.setVisible(false);
        TheDaysLeisure.setVisible(false);
        TheDaysLeisureName.setVisible(false);
        Summertime.setVisible(false);
        SummertimeName.setVisible(false);
        RoaringTides.setVisible(false);
        RoaringTidesName.setVisible(false);
        Snowfield.setVisible(false);
        SnowfieldName.setVisible(false);
        IfIRealizedInTime.setVisible(false);
        IfIRealizedInTimeName.setVisible(false);
        Title.setVisible(true);
        PlayButton.setVisible(true);
        MusicMode.setVisible(true);
        ReadMe.setVisible(true);
        DerivativeCalculator.setVisible(player.getCompleteGame());
        One.setVisible(false);
        Two.setVisible(false);
        Three.setVisible(false);
        Four.setVisible(false);
        Five.setVisible(false);
        Six.setVisible(false);
        Seven.setVisible(false);
        Eight.setVisible(false);
        Nine.setVisible(false);
        Zero.setVisible(false);
        OpeningBracket.setVisible(false);
        ClosingBracket.setVisible(false);
        EquasionBox.setVisible(false);
        DerivativeBox.setVisible(false);
        Multiply.setVisible(false);
        Divide.setVisible(false);
        Add.setVisible(false);
        Subtract.setVisible(false);
        Differentiate.setVisible(false);
        X.setVisible(false);
        Exponent.setVisible(false);
        TextBox.setVisible(false);
        Delete.setVisible(false);
        EquasionText.setText("");
        DerivativeText.setText("");
        ReadMeText.setText("");
        Background.setIcon(theGirlAndTheTree);
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Ushio.wav");
    }//GEN-LAST:event_backActionPerformed

    private void TFOTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFOTPActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
    }//GEN-LAST:event_TFOTPActionPerformed

    private void UshioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UshioActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Ushio.wav");
    }//GEN-LAST:event_UshioActionPerformed

    private void NextTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextTextActionPerformed
        Text.setVisible(true);
        NewMusicBox.setVisible(false);
        NewMusicText.setVisible(false);
        occurrence();
        FirstExit.setVisible(true);
        try{
        String line = Files.readAllLines(Paths.get("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Script.txt")).get(player.getLine());
        performDelayedTextUpdate(line, Text); 
        }
        catch(Exception e){
            System.out.println("Error");
        }       
    }//GEN-LAST:event_NextTextActionPerformed

    private void FantasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FantasyActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
    }//GEN-LAST:event_FantasyActionPerformed

    private void FirstExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstExitActionPerformed
        SecondExit.setVisible(true);
        Cancel.setVisible(true);
        NextText.setVisible(false);
    }//GEN-LAST:event_FirstExitActionPerformed

    private void SecondExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondExitActionPerformed
        TextBox.setVisible(false);
        NextText.setVisible(false);
        FirstExit.setVisible(false);
        SecondExit.setVisible(false);
        Cancel.setVisible(false);
        player.setMainMenuDelayCompleted(false);
        Text.setVisible(false);
        NewMusicBox.setVisible(false);
        NewMusicText.setVisible(false);
        Nagisa.setVisible(false);
        Background.setIcon(theGirlAndTheTree);
        player.lineSubtract();
        // Incase there is no music playing
        try{
            music.stopMusic();
        }
        catch(Exception e){    
        }
        mainMenu();
    }//GEN-LAST:event_SecondExitActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        SecondExit.setVisible(false);
        Cancel.setVisible(false);
        NextText.setVisible(true);
    }//GEN-LAST:event_CancelActionPerformed

    private void NFATFOTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NFATFOTHActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa ~ Farewell At the Foot of a Hill.wav");
    }//GEN-LAST:event_NFATFOTHActionPerformed

    private void Choice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Choice1ActionPerformed
        player.setChoice1("behind school");
        player.setLine(102);
        NextText.setVisible(true);
        Choice1.setVisible(false);
        Choice2.setVisible(false);
        Text.setVisible(true);
        try{
        String line = Files.readAllLines(Paths.get("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Script.txt")).get(player.getLine());
        performDelayedTextUpdate(line, Text); 
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_Choice1ActionPerformed

    private void Choice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Choice2ActionPerformed
        player.setChoice1("home");
        player.setLine(113);
        NextText.setVisible(true);
        Choice1.setVisible(false);
        Choice2.setVisible(false);
        Text.setVisible(true);
        try{
        String line = Files.readAllLines(Paths.get("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Script.txt")).get(player.getLine());
        performDelayedTextUpdate(line, Text); 
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_Choice2ActionPerformed

    private void DerivativeCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DerivativeCalculatorActionPerformed
        Background.setIcon(solidBlue);
        PlayButton.setVisible(false);
        MusicMode.setVisible(false);
        ReadMe.setVisible(false);
        DerivativeCalculator.setVisible(false);
        Title.setVisible(false);
        One.setVisible(true);
        Two.setVisible(true);
        Three.setVisible(true);
        Four.setVisible(true);
        Five.setVisible(true);
        Six.setVisible(true);
        Seven.setVisible(true);
        Eight.setVisible(true);
        Nine.setVisible(true);
        Zero.setVisible(true);
        OpeningBracket.setVisible(true);
        ClosingBracket.setVisible(true);
        EquasionBox.setVisible(true);
        DerivativeBox.setVisible(true);
        Multiply.setVisible(true);
        Divide.setVisible(true);
        Add.setVisible(true);
        Subtract.setVisible(true);
        Differentiate.setVisible(true);
        X.setVisible(true);
        Exponent.setVisible(true);
        TextBox.setVisible(true);
        Delete.setVisible(true);
        EquasionText.setText("f(x)=");
        back.setVisible(true);
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Derivative");
    }//GEN-LAST:event_DerivativeCalculatorActionPerformed

    private void ZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroActionPerformed
        math.setText("0",EquasionText);
    }//GEN-LAST:event_ZeroActionPerformed

    private void EightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EightActionPerformed
        math.setText("8",EquasionText);
    }//GEN-LAST:event_EightActionPerformed

    private void FiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiveActionPerformed
        math.setText("5",EquasionText);
    }//GEN-LAST:event_FiveActionPerformed

    private void TwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TwoActionPerformed
        math.setText("2",EquasionText);
    }//GEN-LAST:event_TwoActionPerformed

    private void OneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OneActionPerformed
        math.setText("1",EquasionText);
    }//GEN-LAST:event_OneActionPerformed

    private void ThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThreeActionPerformed
        math.setText("3",EquasionText);
    }//GEN-LAST:event_ThreeActionPerformed

    private void FourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FourActionPerformed
        math.setText("4",EquasionText);
    }//GEN-LAST:event_FourActionPerformed

    private void SixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SixActionPerformed
        math.setText("6",EquasionText);
    }//GEN-LAST:event_SixActionPerformed

    private void NineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NineActionPerformed
        math.setText("9",EquasionText);
    }//GEN-LAST:event_NineActionPerformed

    private void SevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SevenActionPerformed
        math.setText("7",EquasionText);
    }//GEN-LAST:event_SevenActionPerformed

    private void ExponentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExponentActionPerformed
        math.setText("^[", EquasionText);
    }//GEN-LAST:event_ExponentActionPerformed

    private void OpeningBracketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpeningBracketActionPerformed
        math.setText("(",EquasionText);
    }//GEN-LAST:event_OpeningBracketActionPerformed

    private void ClosingBracketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClosingBracketActionPerformed
        math.setText(")",EquasionText);
    }//GEN-LAST:event_ClosingBracketActionPerformed

    private void MultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplyActionPerformed
        math.setText("*",EquasionText);
    }//GEN-LAST:event_MultiplyActionPerformed

    private void DivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivideActionPerformed
        math.setText("(/",EquasionText);
        math.setBottomFraction(true);
        BottomOfFraction.setVisible(true);
    }//GEN-LAST:event_DivideActionPerformed

    private void SubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtractActionPerformed
        math.setText("-",EquasionText);
    }//GEN-LAST:event_SubtractActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        math.setText("+",EquasionText);
    }//GEN-LAST:event_AddActionPerformed

    private void DifferentiateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DifferentiateActionPerformed
        math.derivativeTaking(math.splitEquasion(math.syntax(DerivativeText)), DerivativeText);
    }//GEN-LAST:event_DifferentiateActionPerformed

    private void XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XActionPerformed
        math.setText("X",EquasionText);
    }//GEN-LAST:event_XActionPerformed

    private void BottomOfFractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottomOfFractionActionPerformed
        math.setBottomFraction(false);
        BottomOfFraction.setVisible(false);
    }//GEN-LAST:event_BottomOfFractionActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        math.deleteCharacter(EquasionText);
    }//GEN-LAST:event_DeleteActionPerformed

    private void NagisaMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NagisaMusicActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
    }//GEN-LAST:event_NagisaMusicActionPerformed

    private void TheDaysLeisureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TheDaysLeisureActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\The Days' Leisure.wav");
    }//GEN-LAST:event_TheDaysLeisureActionPerformed

    private void SummertimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SummertimeActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Summertime.wav");
    }//GEN-LAST:event_SummertimeActionPerformed

    private void RoaringTidesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoaringTidesActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Roaring Tides.wav");
    }//GEN-LAST:event_RoaringTidesActionPerformed

    private void SnowfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SnowfieldActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Snowfield.wav");
    }//GEN-LAST:event_SnowfieldActionPerformed

    private void IfIRealizedInTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IfIRealizedInTimeActionPerformed
        music.stopMusic();
        music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\If I Realized in Time.wav");
    }//GEN-LAST:event_IfIRealizedInTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }
    
    // This method prints out the mainMenu with calling the main menu delay
    public void mainMenu(){
        Title.setVisible(false);
        ReadMe.setVisible(false);
        PlayButton.setVisible(false);
        MusicMode.setVisible(false);
        DerivativeCalculator.setVisible(false);
        DelayMainMenu(2000);
    }
    
    // This method shows the NEW MUSIC UNLOCKED screen
    public void newMusic(){
        player.setCurrentIcon(solidBlack,null);
        player.setCurrentMusic(null);
        Background.setIcon(solidBlack);
        Text.setVisible(false);
        NewMusicBox.setVisible(true);
        NewMusicText.setVisible(true);
        player.setMusicPending(true);
        switch(player.getLine()){
            case 31:
                player.musicUpdate(0);
                break;
            case 93:
                player.musicUpdate(1);
                break;
            case 94:
                player.musicUpdate(2);
                break;
            case 147:
                player.musicUpdate(3);
                break;
            case 165:
                player.musicUpdate(4);
                break;
            case 210:
                player.musicUpdate(5);
                break;
            case 280:
                player.musicUpdate(6);
                break;
            case 358:
                player.musicUpdate(7);
                break;
            case 404:
                player.musicUpdate(8);
                break;
            case 459:
                player.musicUpdate(9);
                break;
            default:
                break;
        }
        try{
        String line = Files.readAllLines(Paths.get("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Script.txt")).get(player.getLine());
        player.lineSubtract();
        music.stopMusic();
        performDelayedTextUpdate(line, NewMusicText); 
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }
    
    // This method checks the player's instance variable line and sees if there is something to do with the line it's currently on
    private void occurrence(){
        switch(player.getLine()) {
            case 24:
                player.setCurrentIcon(illusionaryWorldGreySky,null);
                Background.setIcon(illusionaryWorldGreySky);
                break;
            case 31:
                newMusic();
                break;
            case 32:
                player.setCurrentIcon(bedRoomDay,null);
                player.setCurrentMusic(null);
                Background.setIcon(bedRoomDay);
                break;
            case 40:
                player.setCurrentIcon(skyGrey,null);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
                Background.setIcon(skyGrey);
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
                break;
            case 47:
                player.setCurrentIcon(thatLongLongHill,null);
                Background.setIcon(thatLongLongHill);
                break;
            case 53:
                player.setCurrentMusic(null);
                music.stopMusic();
                break;
            case 54:
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa ~ Farewell At the Foot of a Hill.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa ~ Farewell At the Foot of a Hill.wav");
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 59:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 60:
                player.setCurrentIcon(nagisaLookingStraightSmileEyesClosed);
                Nagisa.setIcon(nagisaLookingStraightSmileEyesClosed);
                break;
            case 61:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 63:
                player.setCurrentIcon(nagisaLookingStraightMouthOpen);
                Nagisa.setIcon(nagisaLookingStraightMouthOpen);
                break;
            case 67:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 69:
                player.setCurrentIcon(nagisaLookingStraightSmileEyesClosed);
                Nagisa.setIcon(nagisaLookingStraightSmileEyesClosed);
                break;
            case 70:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 74:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 77:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 78:
                player.setCurrentIcon(null);
                Nagisa.setIcon(null);
                break;
            case 79:
                player.setCurrentIcon(solidWhite, null);
                Background.setIcon(solidWhite);
                BigText.setVisible(true);
                Text.setVisible(false);
                FirstExit.setVisible(false);
                break;
            case 80:
                BigText.setVisible(false);
                player.setCurrentIcon(frontOfSchoolDay, null);
                Background.setIcon(frontOfSchoolDay);
                Text.setVisible(true);
                FirstExit.setVisible(true);
                break;
            case 93:
                newMusic();
                break;
            case 94:
                newMusic();
                break;
            case 99:
                player.setCurrentIcon(schoolHallwayDay, null);
                Background.setIcon(schoolHallwayDay);
                break;
            case 101:
                NextText.setVisible(false);
                FirstExit.setVisible(false);
                Text.setVisible(false);
                Choice1.setVisible(true);
                Choice2.setVisible(true);
                break;
            case 103:
                player.setCurrentIcon(schoolYardDay, null);
                Background.setIcon(schoolYardDay);
                break;
            case 104:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
                break;
            case 106:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 108:
                player.setCurrentIcon(nagisaLookingStraightSmileEyesClosed);
                Nagisa.setIcon(nagisaLookingStraightSmileEyesClosed);
                break;
            case 109:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 112:
                player.setLine(123);
                break;
            case 114:
                player.setCurrentIcon(frontOfSchoolDay, null);
                Background.setIcon(frontOfSchoolDay);
                break;
            case 115:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
                break;
            case 117:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 118:
                player.setCurrentIcon(thatLongLongHill, null);
                Background.setIcon(thatLongLongHill);
                Nagisa.setIcon(null);
                break;
            case 122:
                player.setLine(123);
                break;
            case 124:
                // The if statements in these next couple cases are made for if the player picked situation 1 or situation 2
                if(player.getChoice1().equals("behind school")){
                    player.setCurrentIcon(nagisaLookingStraightMouthOpen);
                    Nagisa.setIcon(nagisaLookingStraightMouthOpen);
                }
                break;
            case 125:
                if(player.getChoice1().equals("behind school")){
                    player.setCurrentIcon(nagisaLookingStraightSmile);
                    Nagisa.setIcon(nagisaLookingStraightSmile);
                }
                break;
            case 131:
                if(player.getChoice1().equals("behind school")){
                    player.setCurrentIcon(nagisaLookingStraightSmileEyesClosed);
                    Nagisa.setIcon(nagisaLookingStraightSmileEyesClosed);
                }
                break;
            case 132:
                if(player.getChoice1().equals("behind school")){
                    player.setCurrentIcon(nagisaLookingStraightSmile);
                    Nagisa.setIcon(nagisaLookingStraightSmile);
                }
                break;
            case 133:
                if(player.getChoice1().equals("behind school")){
                    player.setCurrentIcon(nagisaLookingRightGreyShirt);
                    Nagisa.setIcon(nagisaLookingRightGreyShirt);
                }
                break;
            case 137:
                if(player.getChoice1().equals("behind school")){
                    player.setCurrentIcon(nagisaLookingStraightSmileEyesClosed);
                    Nagisa.setIcon(nagisaLookingStraightSmileEyesClosed);
                }
                break;
            case 138:
                if(player.getChoice1().equals("behind school")){
                    player.setLine(139);
                }
                else{
                    player.setLine(144);
                }
                break;
            case 140:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 142:
                player.setCurrentIcon(null);
                Nagisa.setIcon(null);
                break;
            case 143:
                player.setLine(147);
                occurrence();
                break;
            case 146:
                player.setLine(147);
                // The reason for this recursion is because once it sets to line 147 it will not look for the case at 147. I need to call the method again for it to look at the case for 147
                occurrence();
                break;
            case 147:
                newMusic();
                break;
            case 148:
                player.setCurrentIcon(schoolHallwayEvening, null);
                Background.setIcon(schoolHallwayEvening);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\The Days' Leisure.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\The Days' Leisure.wav");
                break;
            case 159:
                player.setCurrentIcon(bedRoomNightDark, null);
                Background.setIcon(bedRoomNightDark);
                break;
            case 165:
                newMusic();
                break;
            case 166:
                player.setCurrentIcon(illusionaryWorldSetSceneGreySky,null);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                Background.setIcon(illusionaryWorldSetSceneGreySky);
                break;
            case 183:
                music.stopMusic();
                player.setCurrentIcon(bedRoomDay,null);
                player.setCurrentMusic(null);
                Background.setIcon(bedRoomDay);
                break;
            case 192:
                player.setCurrentIcon(skySunny,null);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Summertime.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Summertime.wav");
                Background.setIcon(skySunny);
                break;
            case 193:
                player.setCurrentIcon(thatLongLongHill,null);
                Background.setIcon(thatLongLongHill);
                break;
            case 194:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 196:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 198:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 200:
                player.setCurrentIcon(nagisaLookingStraightSmile);
                Nagisa.setIcon(nagisaLookingStraightSmile);
                break;
            case 201:
                player.setCurrentIcon(null);
                Nagisa.setIcon(null);
                break;
            case 203:
                player.setCurrentIcon(skySunny,null);
                Background.setIcon(skySunny);
                break;
            case 210:
                newMusic();
                break;
            case 211:
                player.setCurrentIcon(bedRoomNightDark, null);
                Background.setIcon(bedRoomNightDark);
                break;
            case 224:
                player.setCurrentIcon(illusionaryWorldSetSceneGreySky,null);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                Background.setIcon(illusionaryWorldSetSceneGreySky);
                break;
            case 241:
                music.stopMusic();
                player.setCurrentMusic(null);
                player.setCurrentIcon(bedRoomDay,null);
                player.setCurrentMusic(null);
                Background.setIcon(bedRoomDay);
                break;
            case 248:
                player.setCurrentIcon(thatLongLongHill,null);
                Background.setIcon(thatLongLongHill);
                break;
            case 250:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Roaring Tides.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Roaring Tides.wav");
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 260:
                player.setCurrentIcon(null);
                Nagisa.setIcon(null);
                break;
            case 261:
                player.setCurrentIcon(frontOfSchoolDay, null);
                Background.setIcon(frontOfSchoolDay);
                break;
            case 262:
                music.stopMusic();
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
                player.setCurrentIcon(solidBlack, null);
                Background.setIcon(solidBlack);
                break;
            case 264:
                player.setCurrentIcon(frontOfSchoolDay, null);
                Background.setIcon(frontOfSchoolDay);
                break;
            case 276:
                player.setCurrentIcon(bedRoomDay,null);
                Background.setIcon(bedRoomDay);
                break;
            case 280:
                newMusic();
                break;
            case 281:
                player.setCurrentIcon(illusionaryWorldSetSceneGreySky,null);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                Background.setIcon(illusionaryWorldSetSceneGreySky);
                break;
            case 296:
                music.stopMusic();
                player.setCurrentIcon(bedRoomDay,null);
                Background.setIcon(bedRoomDay);
                break;
            case 307:
                player.setCurrentIcon(thatLongLongHill,null);
                Background.setIcon(thatLongLongHill);
                break;
            case 314:
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Snowfield.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Snowfield.wav");
                break;
            case 322:
                player.setCurrentIcon(frontOfSchoolDay, null);
                Background.setIcon(frontOfSchoolDay);
                break;
            case 335:
                player.setCurrentIcon(solidBlack, null);
                Background.setIcon(solidBlack);
                break;
            case 341:
                player.setCurrentIcon(outsideHospitalDay, null);
                Background.setIcon(outsideHospitalDay);
                break;
            case 244:
                player.setCurrentIcon(solidBlack, null);
                Background.setIcon(solidBlack);
                break;
            case 352:
                player.setCurrentIcon(hospitalHallwayNight, null);
                Background.setIcon(hospitalHallwayNight);
                break;
            case 358:
                newMusic();
                break;
            case 361:
                player.setCurrentIcon(hospitalHallwayNight, null);
                Background.setIcon(hospitalHallwayNight);
                break;
            case 370:
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\If I Realized in Time.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\If I Realized in Time.wav");
                player.setCurrentIcon(nagisaInHospital, null);
                Background.setIcon(nagisaInHospital);
                break;
            case 387:
                player.setCurrentIcon(nagisaInHospitalEyesClosed, null);
                Background.setIcon(nagisaInHospitalEyesClosed);
                break;
            case 389:
                music.stopMusic();
                player.setCurrentMusic(null);
                player.setCurrentIcon(solidBlack, null);
                Background.setIcon(solidBlack);
                break;
            case 390:
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Town, Flow of Time, People.wav");
                break;
            case 404:
                newMusic();
                break;
            case 405:
                player.setCurrentIcon(illusionaryWorldSetSceneGreySky,null);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\FantasyII.wav");
                Background.setIcon(illusionaryWorldSetSceneGreySky);
                break;
            case 428:
                music.stopMusic();
                player.setCurrentIcon(bedRoomDay,null);
                Background.setIcon(bedRoomDay);
                break;
            case 442:
                player.setCurrentIcon(thatLongLongHill,null);
                Background.setIcon(thatLongLongHill);
                break;
            case 443:
                player.setCurrentIcon(frontOfSchoolDay, null);
                Background.setIcon(frontOfSchoolDay);
                break;
            case 445:
                player.setCurrentIcon(solidBlack, null);
                Background.setIcon(solidBlack);
                break;
            case 452:
                player.setCurrentIcon(frontOfSchoolEvening, null);
                Background.setIcon(frontOfSchoolEvening);
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\The Place Where Wishes Come True.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\The Place Where Wishes Come True.wav");
                break;
            case 454:
                player.setCurrentIcon(lightOrb, null);
                Background.setIcon(lightOrb);
                break;
            case 456:
                Text.setVisible(false);
                TextBox.setVisible(false);
                FirstExit.setVisible(false);
                break;
            case 457:
                Text.setVisible(true);
                TextBox.setVisible(true);
                FirstExit.setVisible(true);
                break;
            case 458:
                player.setCurrentIcon(frontOfSchoolEvening, null);
                Background.setIcon(frontOfSchoolEvening);
                break;
            case 459:
                newMusic();
                break;
            case 461:
                player.setCurrentMusic("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
                music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Nagisa.wav");
                player.setCurrentIcon(nagisaInHospital, null);
                Background.setIcon(nagisaInHospital);
                player.lineAdd();
                break;
            case 475:
                Text.setVisible(false);
                TextBox.setVisible(false);
                FirstExit.setVisible(false);
                break;
            case 476:
                Text.setVisible(false);
                TextBox.setVisible(false);
                FirstExit.setVisible(false);
                player.setCurrentIcon(solidWhite, null);
                Background.setIcon(solidWhite);
                BigText.setText("The end.");
                BigText.setVisible(true);
                break;
            case 477:
                Text.setVisible(true);
                TextBox.setVisible(true);
                FirstExit.setVisible(true);
                BigText.setVisible(false);
                music.stopMusic();
                player.setCurrentMusic(null);
                player.setCurrentIcon(outsideHospitalDay, null);
                Background.setIcon(outsideHospitalDay);
                break;
            case 480:
                player.setCurrentIcon(nagisaLookingRightGreyShirt);
                Nagisa.setIcon(nagisaLookingRightGreyShirt);
                break;
            case 483:
                player.setCurrentIcon(null);
                Nagisa.setIcon(null);
                break;
            case 486:
                player.setCurrentIcon(illusionaryWorldBlueSky);
                Background.setIcon(illusionaryWorldBlueSky);
                break;
            case 500:
                Text.setVisible(false);
                TextBox.setVisible(false);
                FirstExit.setVisible(false);
                NextText.setVisible(false);
                player.setMainMenuDelayCompleted(false);
                player.setCompleteGame(true);
                player.setLine(2);
                player.setCurrentIcon(null,null);
                PlayButton.setText("Play");
                Background.setIcon(theGirlAndTheTree);
                DelayMainMenu(5000);
                break;
            default:
                break;
        }
    } 
    
    // I used the help of chat GPT to make this timer and explain how it works (everything else inside of it I made myself)
    // The reason I must make my own delay rather than just Thread.sleep() is because for some reason this code doesn't quite execute line by line 
    // It executes everything at once so if you put a delay no matter where in the code it will delay before doing anything
    private void performDelayedTextUpdate(String text, JLabel label){
        Timer timer = new Timer(35, null);
        label.setText("");
        player.lineAdd();
        NextText.setVisible(false);
        timer.addActionListener(new ActionListener(){
            int index = 0;    
            @Override
            
            public void actionPerformed(ActionEvent e) {
                // I need to do it this way rather than a loop because if I do it will do the printing of letters as fast as possible then do a delay rather than a delay after each letter
                if(index < text.length()){
                    label.setText(text.substring(0, index + 1));
                    index++;
                } 
                else{
                    timer.stop();
                    NextText.setVisible(true);
                }
            }
        });
        timer.start();
    }
    
    // I used the help of chat GPT to make this timer and explain how it works (everything else inside of it I made myself)
    private void DelayMainMenu(int delay){
        Timer timer = new Timer(delay, null);
        timer.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                // I need this if statement because when I call my performDelayedTextUpdate it will run this aswell if I do not make a flag
                if(player.getMainMenuDelayCompleted() == false){
                    if(player.getMusicPending() == true){
                        ExclamationImage.setVisible(true);
                    }
                    Title.setVisible(true);
                    ReadMe.setVisible(true);
                    PlayButton.setVisible(true);
                    MusicMode.setVisible(true);
                    DerivativeCalculator.setVisible(player.getCompleteGame());
                    music.playMusicLoop("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Audio\\Ushio.wav");
                    player.setMainMenuDelayCompleted(true);
                    NextText.setVisible(false);
                    FirstExit.setVisible(false);
                }
            }

            private String toString(URL resource) {
                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });
        timer.setRepeats(false);
        timer.start();
    }
    
    // Initializing needed Image icons and a object for the music, player data, and math
    Music music = new Music();
    Player player = new Player();
    Math math = new Math();
    ImageIcon nagisaLookingStraightMouthOpen = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Nagisa Looking Straight Mouth Open.png");
    ImageIcon nagisaLookingStraightSmileEyesClosed = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Nagisa Looking Straight Smile Eyes Closed.png");
    ImageIcon nagisaLookingStraightSmile = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Nagisa Looking Straight Smile.png");
    ImageIcon nagisaLookingRightGreyShirt = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Nagisa Looking Right Grey Shirt.png");
    ImageIcon nagisaInHospital = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Nagisa In Hospital.png");
    ImageIcon nagisaInHospitalEyesClosed = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Nagisa In Hospital Eyes Closed.png");
    ImageIcon lightOrb = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Light Orb.png");
    ImageIcon hospitalHallwayNight = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Hospital Hallway Night.png");
    ImageIcon outsideHospitalDay = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Outside Hospital Day.png");
    ImageIcon skySunny = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Sky Sunny.png");
    ImageIcon schoolYardDay = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\School Yard Day.png");
    ImageIcon schoolHallwayEvening = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Another Hallway Evening.png");
    ImageIcon schoolHallwayDay = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Another Hallway Day.png");
    ImageIcon frontOfSchoolDay = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Front of School Day.png");
    ImageIcon frontOfSchoolEvening = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Front of School Evening.png");
    ImageIcon thatLongLongHill = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\That Long Long Hill.png");
    ImageIcon skyGrey = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Sky Grey.png");
    ImageIcon bedRoomNightDark = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Bed Room Night Dark.png");
    ImageIcon bedRoomDay = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Bed Room Day.png");
    ImageIcon solidBlue = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Solid Blue.png");
    ImageIcon solidBlack = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Solid Black.png");
    ImageIcon solidWhite = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Solid White.png");
    ImageIcon theGirlAndTheTree = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\MainMenu.png");
    ImageIcon illusionaryWorldBlueSky = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Illusionary World Set Scene Blue Sky.png");
    ImageIcon illusionaryWorldGreySky = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Illusionary World Grey Sky.png");
    ImageIcon illusionaryWorldSetSceneGreySky = new ImageIcon("C:\\Users\\Antar\\Downloads\\Town, Flow of Time, People\\src\\town\\flow\\of\\time\\people\\Images\\Illusionary World Set Scene Grey Sky.png");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JLabel Background;
    private javax.swing.JLabel BigText;
    private javax.swing.JButton BottomOfFraction;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Choice1;
    private javax.swing.JButton Choice2;
    private javax.swing.JButton ClosingBracket;
    private javax.swing.JButton Delete;
    private javax.swing.JPanel DerivativeBox;
    private javax.swing.JButton DerivativeCalculator;
    private javax.swing.JLabel DerivativeText;
    private javax.swing.JButton Differentiate;
    private javax.swing.JButton Divide;
    private javax.swing.JButton Eight;
    private javax.swing.JPanel EquasionBox;
    private javax.swing.JLabel EquasionText;
    private javax.swing.JLabel ExclamationImage;
    private javax.swing.JButton Exponent;
    private javax.swing.JButton Fantasy;
    private javax.swing.JLabel FantasyName;
    private javax.swing.JButton FirstExit;
    private javax.swing.JButton Five;
    private javax.swing.JButton Four;
    private javax.swing.JButton IfIRealizedInTime;
    private javax.swing.JLabel IfIRealizedInTimeName;
    private javax.swing.JButton Multiply;
    private javax.swing.JButton MusicMode;
    private javax.swing.JButton NFATFOTH;
    private javax.swing.JLabel NFATFOTHName;
    private javax.swing.JLabel Nagisa;
    private javax.swing.JButton NagisaMusic;
    private javax.swing.JLabel NagisaMusicName;
    private javax.swing.JPanel NewMusicBox;
    private javax.swing.JLabel NewMusicText;
    private javax.swing.JButton NextText;
    private javax.swing.JButton Nine;
    private javax.swing.JButton One;
    private javax.swing.JButton OpeningBracket;
    private javax.swing.JButton PlayButton;
    private javax.swing.JButton ReadMe;
    private javax.swing.JLabel ReadMeText;
    private javax.swing.JButton RoaringTides;
    private javax.swing.JLabel RoaringTidesName;
    private javax.swing.JButton SecondExit;
    private javax.swing.JButton Seven;
    private javax.swing.JButton Six;
    private javax.swing.JButton Snowfield;
    private javax.swing.JLabel SnowfieldName;
    private javax.swing.JButton Subtract;
    private javax.swing.JButton Summertime;
    private javax.swing.JLabel SummertimeName;
    private javax.swing.JButton TFOTP;
    private javax.swing.JLabel TFOTPName;
    private javax.swing.JLabel Text;
    private javax.swing.JPanel TextBox;
    private javax.swing.JButton TheDaysLeisure;
    private javax.swing.JLabel TheDaysLeisureName;
    private javax.swing.JButton Three;
    private javax.swing.JLabel Title;
    private javax.swing.JButton Two;
    private javax.swing.JButton Ushio;
    private javax.swing.JLabel UshioName;
    private javax.swing.JButton X;
    private javax.swing.JButton Zero;
    private javax.swing.JButton back;
    // End of variables declaration//GEN-END:variables
}